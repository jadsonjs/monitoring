<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- Define directory where save the logs -->
    <property name="LOGS" value="/var/log/apps" />
    <property name="LOG_PATTERN" value="%d %p %C{1.} [%t] %m%n" />


    <!-- Configure Console log format (all logs)-->
    <appender name="Console" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>
                %black(%d{ISO8601}) %highlight(%-5level) [%magenta(%t)] %yellow(%C{1.}): %msg%n%throwable
            </Pattern>
        </layout>
    </appender>

    <!-- Configure log file format for info (generic info logs)-->
    <appender name="AppInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOGS}/app_info.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>${LOG_PATTERN}</Pattern>
        </encoder>

        <!-- Exclude ERROR level of this file -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>

        <!-- rollover daily and when the file reaches 10 MegaBytes -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOGS}/archived/app_info-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!-- Configure log file format for errors (generic error logs )-->
    <appender name="AppErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOGS}/app_error.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>${LOG_PATTERN}</Pattern>
        </encoder>

        <!-- Exclude INFO and WORN level of this file -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>


        <!-- rollover daily and when the file reaches 10 MegaBytes -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOGS}/archived/app_error-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!-- Log specific for store stack traces-->
    <appender name="AppStackTraceLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOGS}/app_trace.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>${LOG_PATTERN}</Pattern>
        </encoder>

        <!-- Exclude INFO and WORN level of this file -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>


        <!-- rollover daily and when the file reaches 10 MegaBytes -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOGS}/archived/app_trace-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!-- Log specific for store requests logs -->
    <appender name="AppRequestsLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOGS}/app_request.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>${LOG_PATTERN}</Pattern>
        </encoder>

        <!-- Exclude ERROR level of this file -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>


        <!-- rollover daily and when the file reaches 10 MegaBytes -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOGS}/archived/app_request-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>



    <!-- A file to spring logs -->
    <appender name="SpringLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOGS}/spring-framework.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOGS}/spring-framework-%i.log</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>10</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>10MB</maxFileSize>
        </triggeringPolicy>
    </appender>


    <!--
    == to write to this log, load a specific context
    == LoggerFactory.getLogger("StackTraceLogger");
    -->
    <logger name="StackTraceLogger" level="ERROR" additivity="false">
        <appender-ref ref="AppStackTraceLog"/>
    </logger>

    <!--
    == to write to this log, load a specific context
    == LoggerFactory.getLogger("RequestLogger");
    -->
    <logger name="RequestLogger" level="INFO" additivity="false">
        <appender-ref ref="AppRequestsLog"/>
    </logger>

    <logger name="br.com.example.jadson" level="INFO" additivity="false" >
        <appender-ref ref="AppErrorLog" />
        <appender-ref ref="AppInfoLog" />
        <appender-ref ref="Console" />
    </logger>

    <logger name="org.springframework" level="INFO" additivity="false" >
        <appender-ref ref="SpringLog" />
        <appender-ref ref="Console" />
    </logger>

    <!--
     == The appender Console that was created is then referenced in the root logger.
     ==  Causing it to only output messages that are defined at log level INFO or above (INFO, WARN, ERROR).
     -->
    <root level="INFO">
        <appender-ref ref="Console" />
    </root>



</configuration>